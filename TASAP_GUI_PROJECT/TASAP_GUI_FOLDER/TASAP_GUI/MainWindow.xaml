<Window x:Class="TASAP_GUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        xmlns:local="clr-namespace:TASAP_GUI"
        mc:Ignorable="d"
        Title="MainWindow" 
        Height="600" 
        Width="800"
        ResizeMode="NoResize"
        Topmost="True"
        WindowStyle="None"
        WindowStartupLocation="CenterScreen">

    <Window.Resources>

        <!--// Toggle Button Style Template //-->

        <ImageBrush x:Key="tb_mouse_over"
                    ImageSource="Assets/tgBtn_MouseOver.png"/>

        <!--// Text font style //-->

        <Style x:Key="font_style" TargetType="TextBlock">

            <Setter Property="FontFamily"
                    Value="Fonts/Roboto-Light.ttf #Roboto"/>

            <Setter Property="VerticalAlignment"
                    Value="Center"/>

            <Setter Property="HorizontalAlignment"
                    Value="Left"/>

            <Setter Property="Foreground"
                    Value="White"/>

            <Setter Property="FontSize"
                    Value="20"/>

        </Style>

        <!--// Tooltip Style Template //-->

        <Style TargetType="ToolTip" x:Key="tt_style">

            <Setter Property="Placement" Value="Right"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Margin" Value="20,0,0,0"/>
            <Setter Property="Background" Value="#4A5668"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Fonts/Roboto-Light.ttf #Roboto"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="PlacementRectangle" Value="60,0,0,0"/>
            <Setter Property="HorizontalOffset" Value="15"/>
            <Setter Property="VerticalOffset" Value="6"/>
            <Setter Property="HasDropShadow" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>

        </Style>

        <!--// App Close Button Style Template //-->

        <ImageBrush x:Key="CloseBtn_MouseOver" ImageSource="Assets/closeBtn_MouseOver.png"/>

        <Style x:Key="Close_btn" TargetType="{x:Type Button}">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border x:Name="button"
                                BorderThickness="0"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">

                        </Border>

                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver"
                                     Value="True">

                                <Setter Property="Background"
                                        TargetName="button"
                                        Value="{StaticResource CloseBtn_MouseOver}"/>

                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style>




        <Style x:Key="tb_style" TargetType="{x:Type ToggleButton}">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type ToggleButton}">

                        <Border  x:Name="border"
                                 BorderThickness="{TemplateBinding BorderThickness}"
                                 Background="{TemplateBinding Background}"
                                 SnapsToDevicePixels="True">

                        </Border>

                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="true">

                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource tb_mouse_over}"/>

                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource tb_mouse_over}"/>

                            </Trigger>

                            <Trigger Property="IsChecked" Value="true">

                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource tb_mouse_over}"/>

                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource tb_mouse_over}"/>

                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style>

    </Window.Resources>

    <Grid Background="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="60"/>
            <ColumnDefinition Width="30"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="33"/>
            <RowDefinition Height="57"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Button x:Name="CloseBtn"
                        Grid.Column="1"
                        Grid.Row="1"
                        BorderThickness="0"
                        Style="{StaticResource Close_btn}" Click="CloseBtn_Click" Margin="10,7,10,8">

            <Button.Background>

                <ImageBrush ImageSource="Assets/closeBtn_default.png"/>

            </Button.Background>

        </Button>



        <StackPanel Orientation="Horizontal" Margin="0,0,254,0" HorizontalAlignment="Right" Width="116">
            <TextBlock Name="Put" IsEnabled="False" Margin="0,9,12,0">Put</TextBlock>
            <ToggleButton Name="OptionType" Thumb.DragCompleted="ToggleButton_DragCompleted"
            Style="{StaticResource MaterialDesignSwitchToggleButton}"
            ToolTip="MaterialDesignSwitchToggleButton with Custom Track Background">
                <materialDesign:ToggleButtonAssist.SwitchTrackOnBackground>
                    <SolidColorBrush Color="Green" />
                </materialDesign:ToggleButtonAssist.SwitchTrackOnBackground>
                <materialDesign:ToggleButtonAssist.SwitchTrackOffBackground>
                    <SolidColorBrush Color="Red" />
                </materialDesign:ToggleButtonAssist.SwitchTrackOffBackground>
            </ToggleButton>
            <TextBlock Name="Call" IsEnabled="False" Margin="12,9,0,0">Call</TextBlock>

        </StackPanel>

        <Grid x:Name="GraphGrid" HorizontalAlignment="Left" Height="281" VerticalAlignment="Top" Width="800" Margin="0,229,0,0" Grid.Row="2" Grid.ColumnSpan="3"/>
        <Grid x:Name="ParamsGridLeft" HorizontalAlignment="Left" Height="230" Margin="80,4,0,0" Grid.Row="2" VerticalAlignment="Top" Width="300">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <StackPanel x:Name="SP_StrikePrice" Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Center">
                <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}">Strike Price</RadioButton>
                <Slider Name="StrikePriceSlider" Thumb.DragCompleted="Slider_DragCompletedSP"  Margin="0,5,0,0" Width="150" TickFrequency="5" Orientation="Horizontal" Minimum="1" Maximum="100"  Value="50"></Slider>
                <TextBlock IsEnabled="False" Name="StrikePriceVal"  Margin="5,5,0,0">50</TextBlock>
            </StackPanel>
            <StackPanel x:Name="SP_StockPrice" Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Center">
                <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}">Stock Price</RadioButton>
                <Slider Name="StockPriceSlider" Thumb.DragCompleted="StockPriceSlider_DragCompletedSTP" Margin="0,5,0,0" Width="150" TickFrequency="5" Orientation="Horizontal" Minimum="1" Maximum="100"  Value="50"></Slider>
                <TextBlock IsEnabled="False" Name="StockPriceVal"  Margin="5,5,0,0">50</TextBlock>

            </StackPanel>
            <StackPanel x:Name="SP_TimeToMaturity" Grid.Row="2" Orientation="Horizontal" VerticalAlignment="Center">
                <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}">Maturity</RadioButton>
                <Slider Name="MaturitySlider" Thumb.DragCompleted="MaturitySlider_DragCompleted" Margin="0,5,0,0" Width="150" TickFrequency="5" Orientation="Horizontal" Minimum="1" Maximum="12"  Value="6"></Slider>
                <TextBlock IsEnabled="False" Name="MaturityVal"  Margin="5,5,0,0">6</TextBlock>

            </StackPanel>
        </Grid>
        <Grid x:Name="ParamsGridRight" HorizontalAlignment="Left" Height="230" Margin="422,4,0,0" Grid.Row="2" VerticalAlignment="Top" Width="289" Grid.ColumnSpan="2">
            <Grid.Resources>
                <Style TargetType="CheckBox">
                    <Setter Property="Margin" Value="0,0,8,0"/>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <StackPanel x:Name="SP_RiskFreeRate" Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Center">
                <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}">Rick Free Rate</RadioButton>
                <Slider Name="RfRateSlider" Thumb.DragCompleted="RfRateSlider_DragCompleted" Margin="0,5,0,0" Width="140" TickFrequency="5" Orientation="Horizontal" Minimum="1" Maximum="100"  Value="50"></Slider>
                <TextBlock IsEnabled="False" Name="RfRateVal"  Margin="5,5,0,0">50</TextBlock>
            </StackPanel>

            <StackPanel x:Name="SP_Volatitlity" Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Center">
                <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}">Volatility</RadioButton>
                <Slider Name="VolatilitySlider" Thumb.DragCompleted="VolatilitySlider_DragCompleted" Margin="0,5,0,0" Width="150" TickFrequency="5" Orientation="Horizontal" Minimum="1" Maximum="100"  Value="50"></Slider>
                <TextBlock IsEnabled="False" Name="VolatilityVal"  Margin="5,5,0,0">50</TextBlock>
            </StackPanel>

            <StackPanel Grid.Row="2" Orientation="Horizontal" VerticalAlignment="Center">
                <Button Name="Launch" Click="Launch_Click" Width="120" Height="40 " Style="{StaticResource MaterialDesignRaisedButton}"
                        materialDesign:ButtonProgressAssist.Value="-1"
                        materialDesign:ButtonProgressAssist.IsIndicatorVisible="True"
                        materialDesign:ButtonProgressAssist.IsIndeterminate="True">Launch
                </Button>
                <TextBlock TextAlignment="Center" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" Height="15.96" Width="168">Result</TextBlock>
            </StackPanel>
        </Grid>
    </Grid>

</Window>
